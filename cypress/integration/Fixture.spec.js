///<reference types='cypress'/>
Cypress.on('uncaught:exception', (err, runnable) => {

    return false
})

describe('Corp tech contact ', function() {

    beforeEach('URL Assertion', function(){
        cy.viewport(1920, 1080)
        cy.visit('https://gearprotek.dnaqa.net/login')
        cy.url().should('include','/login')
        cy.fixture('gearprotek').then(testdata  => {
            cy.wait(2000)
            cy.get('#email').type(testdata.email).should('have.value',testdata.email)
            cy.get('#password').type(testdata.password).should('have.value',testdata.password)
            cy.get('[type="submit"]').click()
               
       })
       cy.wait(5000) 
       cy.url().should('eq', 'https://gearprotek.dnaqa.net/portal/dashboard')
    })
       //check menu
       it('check menu',()=>{
        cy.contains('Timeline').click()
        cy.wait(1000)
        cy.url().should('eq', 'https://gearprotek.dnaqa.net/portal/timeline')
        cy.contains('Users').click()
        cy.wait(1000)
        cy.url().should('eq', 'https://gearprotek.dnaqa.net/portal/user')
        cy.contains('Customers').click()
        cy.wait(1000)
        cy.url().should('eq', 'https://gearprotek.dnaqa.net/portal/customer')
        cy.contains('Calls').click()
        cy.wait(1000)
        cy.url().should('eq', 'https://gearprotek.dnaqa.net/portal/call')
        cy.contains('Registrations').click()
        cy.wait(1000)
        cy.url().should('eq', 'https://gearprotek.dnaqa.net/portal/registration')
        cy.contains('Purchase').click()
        cy.wait(1000)
        cy.url().should('eq', 'https://gearprotek.dnaqa.net/portal/purchase')
        cy.contains('Repair Shops').click()
        cy.wait(1000)
        cy.url().should('eq', 'https://gearprotek.dnaqa.net/portal/shop')
        cy.contains('Affiliate').click()
        cy.wait(1000)
        cy.url().should('eq', 'https://gearprotek.dnaqa.net/portal/affiliate')
        cy.contains('Claim Reports').click()
        cy.wait(1000)
        cy.url().should('eq', 'https://gearprotek.dnaqa.net/portal/claim')
       })

       //registration
       it('registration',()=>{
        cy.contains('Registrations').click()
        cy.wait(5000)
        cy.contains('New').click()
        cy.get('.md-dialog-footer').contains('Next').click()
         cy.fixture('gearprotek').then(testdata  => {
             cy.contains('Country').click()
             cy.contains(testdata.country).click({force: true})
             cy.contains('Language').click()
             cy.contains(testdata.language).click({force: true})
             cy.get('#email').type(testdata.registeredEmail).should('have.value',testdata.registeredEmail)
             cy.get('#first_name').type(testdata.first_name).should('have.value',testdata.first_name)
             cy.get('#last_name').type(testdata.last_name).should('have.value',testdata.last_name)
             cy.get('#mobile_phone').type(testdata.phone).should('have.value','(888) 888-8888')
             cy.get('[placeholder="Search address"]').type('Ontario{enter}').should('have.value','Ontario')
             cy.get('#street').type(testdata.address.street).should('have.value',testdata.address.street)
             cy.get('#unit_number').type(testdata.address.unit).should('have.value',testdata.address.unit)
             cy.get('#city').type(testdata.address.city).should('have.value',testdata.address.city)
             cy.get('#zip_code').type(testdata.address.postal).should('have.value',testdata.address.postal)
             cy.contains('Create & Next').click()   
             cy.wait(5000)
             cy.get('#barcode').type(testdata.barcode).should('have.value',testdata.barcode)
             cy.get('#validate-product-barcode').click()
             cy.wait(2000)
             cy.contains('Next').click()
             cy.wait(2000)
             cy.get('#react-select-4--value > div.Select-placeholder').click({force:true})
             cy.wait(2000)
             cy.contains(testdata.deviceDetails.device).click({force:true})
             cy.get('#imei').type(testdata.deviceDetails.ime).should('have.value',testdata.deviceDetails.ime)
             cy.contains('Next').click()
             cy.get('#receipt_number').type(testdata.receiptDetails.rnumber).should('have.value',testdata.receiptDetails.rnumber )
             cy.get('#store_name').type(testdata.receiptDetails.store).should('have.value',testdata.receiptDetails.store)
             cy.get('#branch').type(testdata.receiptDetails.branch).should('have.value',testdata.receiptDetails.branch)
             cy.get('.react-datepicker-component').click()
             cy.wait(1000)
             cy.contains(testdata.receiptDetails.date).click({force: true});    
        })
        //upload image using fixture
        cy.fixture('images/receipt.png').as('receipt')
         cy.get('input[type=file]').then(function(el) {
         // convert base64 string to a blob
         const blob = Cypress.Blob.base64StringToBlob(this.receipt, 'image/png')
 
         const file = new File([blob], 'images/receipt.png', { type: 'image/png' })
         const list = new DataTransfer()
 
         list.items.add(file)
         const myFileList = list.files
         cy.log(el)
         el[0].files = myFileList
         el[0].dispatchEvent(new Event('change', { bubbles: true }))
         })
        cy.wait(2000)
        cy.contains('Next').click()
        cy.get('#undefined-panel-5 > div > div > div > div > div > div > fieldset:nth-child(1) > div:nth-child(2) > label > div').click()
        cy.get('#undefined-panel-5 > div > div > div > div > div > div > fieldset:nth-child(2) > div:nth-child(2) > label > div > i').click()
        cy.contains('Next').click()

        //check summary content
        cy.fixture('gearprotek').then(testdata  => {
            cy.get('[class="summary-row"]').should('contain','Email Address:')
            cy.get('#undefined-panel-6 > div > div:nth-child(2) > div.section-body.customerInfo > div.section-grid > div > div:nth-child(1) > span').should('contain', testdata.registeredEmail)
            cy.get('[class="summary-row"]').should('contain','First Name:')
            cy.get('#undefined-panel-6 > div > div:nth-child(2) > div.section-body.customerInfo > div.section-grid > div > div:nth-child(2) > span').should('contain', testdata.first_name)
            cy.get('[class="summary-row"]').should('contain','Last Name:')
            cy.get('#undefined-panel-6 > div > div:nth-child(2) > div.section-body.customerInfo > div.section-grid > div > div:nth-child(3) > span').should('contain', testdata.last_name)
            cy.get('[class="summary-row"]').should('contain','Address:')
            cy.get('#undefined-panel-6 > div > div:nth-child(2) > div.section-body.customerInfo > div.section-grid > div > div:nth-child(4) > span').should('contain', testdata.address.city,testdata.address.street,testdata.address.postal)
            cy.get('[class="summary-row"]').should('contain','Phone Number:')
            cy.get('#undefined-panel-6 > div > div:nth-child(2) > div.section-body.customerInfo > div.section-grid > div > div:nth-child(6) > span').should('contain', testdata.language)
            cy.get('[class="summary-row"]').should('contain','Language:')
            cy.get('#undefined-panel-6 > div > div:nth-child(2) > div.section-body.devInfo > div.section-grid > div > div:nth-child(1) > span').should('contain', testdata.barcode)
            cy.get('[class="summary-row"]').should('contain','Product Barcode:')
            cy.get('#undefined-panel-6 > div > div:nth-child(2) > div.section-body.devInfo > div.section-grid > div > div:nth-child(3) > span').should('contain', testdata.deviceDetails.device)
            cy.get('[class="summary-row"]').should('contain','Product Name:')
            cy.get('#undefined-panel-6 > div > div:nth-child(2) > div.section-body.devInfo > div.section-grid > div > div:nth-child(4) > span').should('contain', testdata.deviceDetails.ime)
            cy.get('[class="summary-row"]').should('contain','Device:')
            cy.get('#undefined-panel-6 > div > div:nth-child(3) > div > div.section-grid > div > div:nth-child(1) > span').should('contain',testdata.receiptDetails.rnumber)
            cy.get('[class="summary-row"]').should('contain','IMEI:')
            cy.get('#undefined-panel-6 > div > div:nth-child(3) > div > div.section-grid > div > div:nth-child(2) > span').should('contain',testdata.receiptDetails.store)
            cy.get('[class="summary-row"]').should('contain','Receipt Number:')
            cy.get('#undefined-panel-6 > div > div:nth-child(3) > div > div.section-grid > div > div:nth-child(3) > span').should('contain',testdata.receiptDetails.branch)
            cy.get('[class="summary-row"]').should('contain','Store:')
            cy.get('#undefined-panel-6 > div > div:nth-child(3) > div > div.section-grid > div > div:nth-child(4) > span').should('contain',testdata.receiptDetails.date)     
            cy.get('[class="summary-row"]').should('contain','Branch:')
            cy.get('[class="summary-row"]').should('contain','Purchase Date:')
            cy.get('#undefined-panel-6 > div > div:nth-child(4) > div > div.section-grid > div > div:nth-child(1) > span').should('contain','Yes')
            cy.get('#undefined-panel-6 > div > div:nth-child(4) > div > div.section-grid > div > div:nth-child(2) > span').should('contain','Yes')
            cy.contains('Save & Continue').click() 
            cy.wait(5000)
            cy.contains('Delete Registration').click()
            cy.wait(3000)
            cy.get('#password').type(testdata.password)
            cy.contains('Yes').click()
            cy.wait(2000)
            cy.get('#snackbar-alert-dialog > p').should('contain','Registration successfully deleted')
     })
    })
})
 